12장 필터
	01. 필터란 무엇인가
		필터는 클라이언트와 서버 사이에서 request와 response 객체를 먼저 받아 사전/사후 작업 등 공통적으로 필요한 부분을 처리하는 것을 말한다.
		말 그대로 무언가를 걸러주는 역할을 담당하는 것이 필터
	
	02. Filter 인터페이스에 있는 메소드의 종류와 기능을 설명
		- init() : 필터 인스턴스의 초기화 메소드
		- doFilter() : 필터 기능을 작성하는 메소드
		- destroy() : 필터 인스턴스의 종료 전에 호출되는 메소드
	
		1) init 메소드는 인스턴스의 초기화 메소드 이므로, 서버가 로드 될 때 딱 한번 실행되며 그 안에서 값을 초기화 하는 기능을 제공
		
		2) doFilter 메소드는 web.xml에 설정된 url-pattern이 실행될 때 마다 doFilter 메소드가 실행
		   doFilter 메소드는 여러 필터가 존재할 경우 chain으로 묶여 있는데 최초의 필터가 서버로 전달되어 넘어오는 request와 response 내장객체를
		       제일 먼저 잡아 1차 데이터 가공 후 doFilter메소드를 통해 다음 필터가 존재한다면 다음 필터로 내장객체를 전달해 주고, 필터가 존재하지 않고
		       리소스가 존재한다면 리소스로 최종 내장 객체를 전달하여 최초 요청에 대한 응답을 마무리
			 
		   ** 필터를 적용하는 중에, 최종 화면이 그냥 빈 화면이라면
		       필터를 적용함에 있어 doFilter 메소드 내, doFilter를 활용하여 request와 response를 전달해야 하는데 전달하지 않아 필터쪽에서 request와 response객체가
		       끝나버려 생기는 현상
		       필터를 적용했다면 이 부분에 대한 점검도 꼭 검증해야 한다
		
		3) destroy 메소드는 사용중인 브라우저가 닫히거나 생태계의 라이프 사이클이 끝나면 실행되는 메소드
		   init에서 생성했던 객체, 초기화 했던 데이터 등등을 destory메소드에서 close 하거나 초기화 할 수 있다.
	
	03. web.xml 파일에 필터를 구성하는 요소의 종류를 설명
		1) <filter>
			- 웹 어플리케이션에서 자바 필터와 매개변수를 설정하는데 사용
			
			<filter>
				<filter-name>필터 이름</filter-name>
				<filter-class>클래스 이름</filter-class>
				[
					<init-param>
						<param-name></param-name>
						<param-value></param-value>
					</init-param>
				]
			</filter>
			
			- [] 안에 있는 init-param은 생략 가능
			- filter name은 custom 영역으로 내가 설정하고자 하는 name명으로 설정 가능
			- filter class는 filter 인터페이스를 implements 받은 클래스 구현체의 위치를 나타내는데,
			     해당 클래스의 class view 영역의 qualified name으로 복사해서 가져오면 패키지 구조를 포함한 해당 위치의 경로를 정확하게 가져 올 수 있다
			     
		2) <filter-mapping>
			- 특정 리소스에 대해 어떤 필터를 사용할지 설정하는데 사용
			
			<filter-mapping>
				<filter-name>필터 이름</filter-name>
				<url-pattern>요청 URL 패턴</url-pattern>
			</filter-mapping>
			
			- filter-mapping은 filter태그에서 만든 필터 영역과 매핑되는 곳
			- filter-mapping은 하나의 filter태그와 매핑